// –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏–≥—Ä—ã 2048 —Å Telegram API

class TelegramIntegration {
    constructor() {
        this.userId = TelegramUtils.getUserId();
        this.apiBaseUrl = window.location.origin;
        this.isInitialized = false;
        this.init();
    }

    init() {
        if (!this.userId) {
            console.error("User ID –Ω–µ –Ω–∞–π–¥–µ–Ω");
            return;
        }

        this.isInitialized = true;
        console.log("Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", this.userId);

        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∏–≥—Ä—ã
        this.setupGameEventListeners();
    }

    setupGameEventListeners() {
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞
        document.addEventListener('scoreUpdated', (event) => {
            this.handleScoreUpdate(event.detail.score);
        });

        // –°–ª—É—à–∞–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∏–≥—Ä—ã
        document.addEventListener('gameOver', (event) => {
            this.handleGameOver(event.detail);
        });

        // –°–ª—É—à–∞–µ–º –ø–æ–±–µ–¥—É
        document.addEventListener('gameWon', (event) => {
            this.handleGameWon(event.detail);
        });
    }

    async handleScoreUpdate(score) {
        if (!this.isInitialized) return;

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—á–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            await this.updateBestScore(score);
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—á–µ—Ç–∞:", error);
        }
    }

    async updateBestScore(score) {
        const response = await fetch(`${this.apiBaseUrl}/api/bestScore/${this.userId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ score: score })
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        console.log("–°—á–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω:", data);
        return data;
    }

    async getUserRank() {
        try {
            const response = await fetch(`${this.apiBaseUrl}/api/user/${this.userId}/rank`);
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            return data;
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞–Ω–≥–∞:", error);
            return null;
        }
    }

    async getTopScores() {
        try {
            const response = await fetch(`${this.apiBaseUrl}/api/top-scores`);
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            return data;
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–ø —Å—á–µ—Ç–æ–≤:", error);
            return [];
        }
    }

    handleGameOver(gameData) {
        const finalScore = gameData.score;
        console.log("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—á–µ—Ç:", finalScore);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram API
        TelegramUtils.showAlert(`–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í–∞—à —Å—á–µ—Ç: ${finalScore}`);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã
        TelegramUtils.showMainButton("üîÑ –ù–æ–≤–∞—è –∏–≥—Ä–∞", () => {
            if (window.gameManager) {
                window.gameManager.restart();
            }
        });
    }

    handleGameWon(gameData) {
        const score = gameData.score;
        console.log("–ò–≥—Ä–∞ –≤—ã–∏–≥—Ä–∞–Ω–∞! –°—á–µ—Ç:", score);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ
        TelegramUtils.showAlert(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ 2048! –°—á–µ—Ç: ${score}`);

        // –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É –∏–ª–∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ
        TelegramUtils.showMainButton("üéÆ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", () => {
            TelegramUtils.hideMainButton();
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –∫–æ–≥–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
document.addEventListener('DOMContentLoaded', function() {
    window.telegramIntegration = new TelegramIntegration();
});